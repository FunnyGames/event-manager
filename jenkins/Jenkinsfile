pipeline {
    agent {
        docker {
            image 'python:3-alpine'
        }
    }
    stages {
        stage('Build') {
            steps {
                notifyBuild('STARTED')

                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'pip install django'
                    sh 'pip install pymysql'
                    sh 'pip install django-crispy-forms'
                }
            }
        }
        stage('Test') {
            steps {
                try {
                    withEnv(["HOME=${env.WORKSPACE}"]) {
                        sh 'pip install django'
                        sh 'pip install pymysql'
                        sh 'pip install django-crispy-forms'
                        sh 'pip install django_jenkins'
                        sh 'pip install \'coverage==4.5.4\''
                        sh 'pip install pep8'
                        sh 'pip install pyflakes'
                        sh 'cd event_manager && python manage.py jenkins --enable-coverage'
                    }
                } catch (e) {
                    // If there was an exception thrown, the build failed
                    currentBuild.result = "FAILED"
                    throw e
                }
            }
            post {
                always {
                    junit 'event_manager/reports/junit.xml'

                    // Success or failure, always send notifications
                    notifyBuild(currentBuild.result)
                }
            }
        }
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus = buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  def details = """<p>STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
    <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>"""

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)

  hipchatSend (color: color, notify: true, message: summary)

  emailext (
      subject: subject,
      body: details,
      recipientProviders: [[$class: 'DevelopersRecipientProvider']]
    )
}